{"graphName":"orders-graph","operations":{"UpdateComment":{"operation":"mutation UpdateComment($orderId: ID! $comment: String) {\n\torder(id: $orderId) {\n        updateCustomerComment(comment: $comment){\n            customerComment\n        }\n    }\n}"},"UpdateOrder":{"operation":"mutation UpdateOrder ($id: ID! $order: OrderUpdateInput) {\n\tupdateOrder(id:$id order: $order) {\n        id\n    }\n}"}},"queryPlans":{"UpdateComment":"QueryPlan {\n  Fetch(service: \"orders\") {\n    {\n      order(id: $orderId) {\n        updateCustomerComment(comment: $comment) {\n          customerComment\n        }\n      }\n    }\n  },\n}","UpdateOrder":"QueryPlan {\n  Fetch(service: \"orders\") {\n    {\n      updateOrder(id: $id, order: $order) {\n        id\n      }\n    }\n  },\n}"},"schemas":{"orders":{"shouldMock":true,"sdl":"type Order @key(fields:\"id\"){\n    id: ID!\n    number: String\n    customerComment: String\n    internalComment: String\n    details: [Detail]\n}\nextend type Detail @key(fields:\"id\") {\n    id: ID! @external\n    order: Order\n    trackCode: String \n}\ntype Query {\n    order(id:ID!): Order\n}\ntype Mutation {\n    updateOrder(id: ID! order: OrderUpdateInput): Order\n    order(id: ID!): OrderMutation\n}\ntype OrderMutation {\n    id: ID!\n    updateCustomerComment(comment: String): Order\n    addInternalComment(comment: String): Order\n}\ninput OrderUpdateInput {\n    paymentStatus: Status\n    orderStatus: Status\n    trackingCode: String\n    comment: String\n    transactionId: String\n    clearedDate: String\n}\nenum Status {\n    OPEN\n    COMPLETE\n}","autoUpdateSchemaFromUrl":false},"details":{"shouldMock":true,"sdl":"type Detail @key(fields:\"id\") {\n    id:ID!\n}\nextend type Order @key(fields:\"id\") {\n    id:ID! @external\n}","autoUpdateSchemaFromUrl":false}},"supergraphSdl":"schema\n  @core(feature: \"https://specs.apollo.dev/core/v0.1\"),\n  @core(feature: \"https://specs.apollo.dev/join/v0.1\")\n{\n  query: Query\n  mutation: Mutation\n}\n\ndirective @core(feature: String!) repeatable on SCHEMA\n\ndirective @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION\n\ndirective @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on OBJECT | INTERFACE\n\ndirective @join__owner(graph: join__Graph!) on OBJECT | INTERFACE\n\ndirective @join__graph(name: String!, url: String!) on ENUM_VALUE\n\ntype Detail\n  @join__owner(graph: DETAILS)\n  @join__type(graph: DETAILS, key: \"id\")\n  @join__type(graph: ORDERS, key: \"id\")\n{\n  id: ID! @join__field(graph: DETAILS)\n  order: Order @join__field(graph: ORDERS)\n  trackCode: String @join__field(graph: ORDERS)\n}\n\nscalar join__FieldSet\n\nenum join__Graph {\n  DETAILS @join__graph(name: \"details\" url: \"\")\n  ORDERS @join__graph(name: \"orders\" url: \"\")\n}\n\ntype Mutation {\n  order(id: ID!): OrderMutation @join__field(graph: ORDERS)\n  updateOrder(id: ID!, order: OrderUpdateInput): Order @join__field(graph: ORDERS)\n}\n\ntype Order\n  @join__owner(graph: ORDERS)\n  @join__type(graph: ORDERS, key: \"id\")\n  @join__type(graph: DETAILS, key: \"id\")\n{\n  customerComment: String @join__field(graph: ORDERS)\n  details: [Detail] @join__field(graph: ORDERS)\n  id: ID! @join__field(graph: ORDERS)\n  internalComment: String @join__field(graph: ORDERS)\n  number: String @join__field(graph: ORDERS)\n}\n\ntype OrderMutation {\n  addInternalComment(comment: String): Order\n  id: ID!\n  updateCustomerComment(comment: String): Order\n}\n\ninput OrderUpdateInput {\n  clearedDate: String\n  comment: String\n  orderStatus: Status\n  paymentStatus: Status\n  trackingCode: String\n  transactionId: String\n}\n\ntype Query {\n  order(id: ID!): Order @join__field(graph: ORDERS)\n}\n\nenum Status {\n  COMPLETE\n  OPEN\n}\n"}